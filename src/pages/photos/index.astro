---
import { Image } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { PHOTOS } from "@consts";
import axios from "axios";

const get_url = (page: number) =>
  `https://api.unsplash.com/users/focusbreathing/photos?client_id=${process.env.UNSPLASH_CLIENT_ID}&page=${page}`;

async function fetchPhotos(page: number) {
  try {
    const response = await axios.get(get_url(page), {
      timeout: 5000, // Optional: Set a timeout for the request
    });

    return { data: response.data, headers: response.headers };
  } catch (error) {
    console.error(
      "Error fetching photos:",
      error.response,
      error.message,
      error.headers,
    );

    return { data: [], headers: {} }; // Return a safe fallback
  }
}

const { data, headers } = await fetchPhotos(1);

let images = data;
const pages = Math.ceil(
  Number(headers["x-total"]) / Number(headers["x-per-page"]),
);

for (let i = 2; i < pages; i++) {
  // for (let i = 2; i < 3; i++) {

  images = images.concat((await fetchPhotos(i)).data);
}

if (images.length === 0) {
  images = data;
}
---

<Layout title={PHOTOS.TITLE} description={PHOTOS.DESCRIPTION}>
  <Container>
    <aside data-pagefind-ignore>
      <div class="space-y-10">
        <div class="space-y-4">
          <div class="animate grid grid-cols-1 gap-1 sm:grid-cols-3">
            {
              images.map((photo) => (
                <a
                  class="justify-items-center overflow-hidden transition ease-in-out sm:hover:rounded-lg"
                  href={photo.links.html}
                  target="_blank"
                >
                  <Image
                    class="w-full transition duration-300 ease-in-out sm:h-80 sm:w-full sm:object-cover sm:hover:scale-110"
                    src={photo.urls.regular}
                    alt={photo.id}
                    width={photo.width * 0.1}
                    height={photo.height * 0.1}
                  />
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </aside>
  </Container>
</Layout>
